name: Publish Scala Container Images (Docker Hub Only)

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  workflow_dispatch:
  workflow_run:
    workflows: ["Scala Build & Test"]
    types: [completed]
    branches: [main]

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push_to_dockerhub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    permissions:
      contents: read
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Checkout with LFS
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt-hotspot'
          cache: 'sbt'
      - name: Set up sbt
        uses: sbt/setup-sbt@v1
      - name: Declare some variables
        shell: bash
        run: |
          echo "short_git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "git_branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=${{ env.git_branch }}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag
      - name: Stage Docker build environment from sbt
        run: |
          sbt Docker/stage
      - name: Build and Push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: target/docker/stage
          push: true
          provenance: mode=max
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
